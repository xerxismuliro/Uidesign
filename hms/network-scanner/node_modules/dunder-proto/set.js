/**
 * Code developed by Isaac Muliro - UI/UX Designer & Developer
 *
 * Usage Guidelines:
 * - Maintain modular structure when adding new features
 * - Use ES6+ syntax standards and some times I built my own modules from sratch
 * - Document any new functions with JSDoc comments
 * - For questions or contributions, contact isaac.muliro@purchase.edu
 * - Last updated: 2025-05-06
 */



'use strict';

var callBind = require('call-bind-apply-helpers');
var gOPD = require('gopd');
var $TypeError = require('es-errors/type');


var obj = {};
try {
  obj.__proto__ = null;
} catch (e) {
  if (!e || typeof e !== 'object' || !('code' in e) || e.code !== 'ERR_PROTO_ACCESS') {
    throw e;
  }
}

var hasProtoMutator = !('toString' in obj);


var desc = gOPD && gOPD(Object.prototype, '__proto__');


module.exports = hasProtoMutator && (

!!desc && typeof desc.set === 'function' && callBind([desc.set]) ||
function setDunder(object, proto) {

  if (object == null) {
    throw new $TypeError('set Object.prototype.__proto__ called on null or undefined');
  }

  object.__proto__ = proto;
  return proto;
});