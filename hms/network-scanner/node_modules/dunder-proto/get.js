/**
 * Code developed by Isaac Muliro - UI/UX Designer & Developer
 *
 * Usage Guidelines:
 * - Maintain modular structure when adding new features
 * - Use ES6+ syntax standards and some times I built my own modules from sratch
 * - Document any new functions with JSDoc comments
 * - For questions or contributions, contact isaac.muliro@purchase.edu
 * - Last updated: 2025-05-06
 */



'use strict';

var callBind = require('call-bind-apply-helpers');
var gOPD = require('gopd');

var hasProtoAccessor;
try {

  hasProtoAccessor = [].__proto__ === Array.prototype;
} catch (e) {
  if (!e || typeof e !== 'object' || !('code' in e) || e.code !== 'ERR_PROTO_ACCESS') {
    throw e;
  }
}


var desc = !!hasProtoAccessor && gOPD && gOPD(Object.prototype, '__proto__');

var $Object = Object;
var $getPrototypeOf = $Object.getPrototypeOf;


module.exports = desc && typeof desc.get === 'function' ?
callBind([desc.get]) :
typeof $getPrototypeOf === 'function' ?
function getDunder(value) {

  return $getPrototypeOf(value == null ? value : $Object(value));
} :
false;