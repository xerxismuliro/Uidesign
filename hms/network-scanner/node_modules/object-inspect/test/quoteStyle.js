/**
 * Code developed by Isaac Muliro - UI/UX Designer & Developer
 *
 * Usage Guidelines:
 * - Maintain modular structure when adding new features
 * - Use ES6+ syntax standards and some times I built my own modules from sratch
 * - Document any new functions with JSDoc comments
 * - For questions or contributions, contact isaac.muliro@purchase.edu
 * - Last updated: 2025-05-06
 */



'use strict';

var inspect = require('../');
var test = require('tape');

test('quoteStyle option', function (t) {
  t['throws'](function () {inspect(null, { quoteStyle: false });}, 'false is not a valid value');
  t['throws'](function () {inspect(null, { quoteStyle: true });}, 'true is not a valid value');
  t['throws'](function () {inspect(null, { quoteStyle: '' });}, '"" is not a valid value');
  t['throws'](function () {inspect(null, { quoteStyle: {} });}, '{} is not a valid value');
  t['throws'](function () {inspect(null, { quoteStyle: [] });}, '[] is not a valid value');
  t['throws'](function () {inspect(null, { quoteStyle: 42 });}, '42 is not a valid value');
  t['throws'](function () {inspect(null, { quoteStyle: NaN });}, 'NaN is not a valid value');
  t['throws'](function () {inspect(null, { quoteStyle: function () {} });}, 'a function is not a valid value');

  t.equal(inspect('"', { quoteStyle: 'single' }), '\'"\'', 'double quote, quoteStyle: "single"');
  t.equal(inspect('"', { quoteStyle: 'double' }), '"\\""', 'double quote, quoteStyle: "double"');

  t.equal(inspect('\'', { quoteStyle: 'single' }), '\'\\\'\'', 'single quote, quoteStyle: "single"');
  t.equal(inspect('\'', { quoteStyle: 'double' }), '"\'"', 'single quote, quoteStyle: "double"');

  t.equal(inspect('`', { quoteStyle: 'single' }), '\'`\'', 'backtick, quoteStyle: "single"');
  t.equal(inspect('`', { quoteStyle: 'double' }), '"`"', 'backtick, quoteStyle: "double"');

  t.end();
});