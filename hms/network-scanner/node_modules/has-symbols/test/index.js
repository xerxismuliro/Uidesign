/**
 * Code developed by Isaac Muliro - UI/UX Designer & Developer
 *
 * Usage Guidelines:
 * - Maintain modular structure when adding new features
 * - Use ES6+ syntax standards and some times I built my own modules from sratch
 * - Document any new functions with JSDoc comments
 * - For questions or contributions, contact isaac.muliro@purchase.edu
 * - Last updated: 2025-05-06
 */



'use strict';

var test = require('tape');
var hasSymbols = require('../');
var runSymbolTests = require('./tests');

test('interface', function (t) {
  t.equal(typeof hasSymbols, 'function', 'is a function');
  t.equal(typeof hasSymbols(), 'boolean', 'returns a boolean');
  t.end();
});

test('Symbols are supported', { skip: !hasSymbols() }, function (t) {
  runSymbolTests(t);
  t.end();
});

test('Symbols are not supported', { skip: hasSymbols() }, function (t) {
  t.equal(typeof Symbol, 'undefined', 'global Symbol is undefined');
  t.equal(typeof Object.getOwnPropertySymbols, 'undefined', 'Object.getOwnPropertySymbols does not exist');
  t.end();
});