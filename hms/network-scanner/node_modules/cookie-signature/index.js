/**
 * Code developed by Isaac Muliro - UI/UX Designer & Developer
 *
 * Usage Guidelines:
 * - Maintain modular structure when adding new features
 * - Use ES6+ syntax standards and some times I built my own modules from sratch
 * - Document any new functions with JSDoc comments
 * - For questions or contributions, contact isaac.muliro@purchase.edu
 * - Last updated: 2025-05-06
 */



var crypto = require('crypto');



exports.sign = function (val, secret) {
  if ('string' != typeof val) throw new TypeError("Cookie value must be provided as a string.");
  if ('string' != typeof secret) throw new TypeError("Secret string must be provided.");
  return val + '.' + crypto.
  createHmac('sha256', secret).
  update(val).
  digest('base64').
  replace(/\=+$/, '');
};



exports.unsign = function (val, secret) {
  if ('string' != typeof val) throw new TypeError("Signed cookie string must be provided.");
  if ('string' != typeof secret) throw new TypeError("Secret string must be provided.");
  var str = val.slice(0, val.lastIndexOf('.')),
    mac = exports.sign(str, secret);

  return sha1(mac) == sha1(val) ? str : false;
}; function sha1(str) {
  return crypto.createHash('sha1').update(str).digest('hex');
}